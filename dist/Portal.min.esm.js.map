{"version":3,"sources":["Portal.esm.js"],"names":["_portalElement","_supportCSSTypedOM","_portalClickEventListener","_portalTrainsitionEndEventListener","__classPrivateFieldSet","this","receiver","privateMap","value","has","TypeError","set","__classPrivateFieldGet","get","Portal","HTMLElement","[object Object]","super","undefined","attributeStyleMap","cssString","shadow","attachShadow","mode","innerHTML","adoptedStyleSheets","cssStyleSheet","CSSStyleSheet","replaceSync","shadowRoot","getElementById","_portalClickEvent","bind","_portalTrainsitionEndEvent","observedAttributes","portalElement","src","referrerPolicy","referrerpolicy","addEventListener","passive","removeEventListener","name","_oldValue","newValue","removeAttribute","getAttribute","setAttribute","_fullScreen","ev","propertyName","_activate","rect","getBoundingClientRect","CSS","px","top","left","width","style","setTimeout","classList","add","activate","WeakMap"],"mappings":"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","file":"Portal.esm.js","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n};\nvar _portalElement, _supportCSSTypedOM, _portalClickEventListener, _portalTrainsitionEndEventListener;\n/**\n * <portal>\n *\n * @version 2.1.0\n */\nexport default class Portal extends HTMLElement {\n    constructor() {\n        super();\n        _portalElement.set(this, void 0);\n        _supportCSSTypedOM.set(this, void 0); // CSS Typed Object Model に対応しているか（Chrome 66+, Chromium Edge） https://caniuse.com/mdn-api_element_attributestylemap\n        _portalClickEventListener.set(this, void 0);\n        _portalTrainsitionEndEventListener.set(this, void 0);\n        __classPrivateFieldSet(this, _supportCSSTypedOM, this.attributeStyleMap !== undefined);\n        const cssString = `\n\t\t\t:host {\n\t\t\t\t--portal-width: 640px;\n\t\t\t\t--portal-height: 360px;\n\t\t\t\t--portal-max-width: 100%;\n\t\t\t\t--portal-max-height: 100vh;\n\t\t\t\t--portal-border-style: solid;\n\t\t\t\t--portal-border-width: 1px;\n\t\t\t\t--portal-border-color: currentColor;\n\t\t\t\t--portal-scale: .5;\n\t\t\t\t--portal-animation-duration: .5s;\n\t\t\t\t--portal-outline-style: solid;\n\t\t\t\t--portal-outline-width: 1px;\n\t\t\t\t--portal-outline-color: currentColor;\n\t\t\t\t--portal-outline-offset: 0px;\n\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: min(var(--portal-width), var(--portal-max-width));\n\t\t\t\theight: min(var(--portal-height), var(--portal-max-height));\n\t\t\t\tposition: relative;\n\t\t\t}\n\t\t\t@media (prefers-reduced-motion) {\n\t\t\t\t:host {\n\t\t\t\t\t--portal-animation-duration: 0.01s; /* '0s' にすると 'transitionend' イベントの検知ができなくなる */\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.portal {\n\t\t\t\tborder: calc(var(--portal-border-width) / var(--portal-scale)) var(--portal-border-style) var(--portal-border-color);\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: min(calc(var(--portal-width) / var(--portal-scale)), calc(var(--portal-max-width) / var(--portal-scale)));\n\t\t\t\theight: min(calc(var(--portal-height) / var(--portal-scale)), calc(var(--portal-max-height) / var(--portal-scale)));\n\t\t\t\ttransform: scale(var(--portal-scale));\n\t\t\t\ttransform-origin: 0 0;\n\t\t\t\ttransition: width var(--portal-animation-duration), height var(--portal-animation-duration), top var(--portal-animation-duration), left var(--portal-animation-duration), transform var(--portal-animation-duration);\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.portal:focus {\n\t\t\t\toutline: calc(var(--portal-outline-width) / var(--portal-scale)) var(--portal-outline-style) var(--portal-outline-color);\n\t\t\t\toutline-offset: calc(var(--portal-outline-offset) / var(--portal-scale));\n\t\t\t}\n\n\t\t\t.portal.-fullscreen {\n\t\t\t\t--portal-border-width: 0;\n\t\t\t\tposition: fixed;\n\t\t\t\twidth: 100vw !important;\n\t\t\t\theight: 100vh;\n\t\t\t\ttop: 0 !important;\n\t\t\t\tleft: 0 !important;\n\t\t\t\ttransform: none;\n\t\t\t\tz-index: 2147483647;\n\t\t\t}\n\t\t`;\n        const shadow = this.attachShadow({ mode: 'open' });\n        shadow.innerHTML = `\n\t\t\t<portal id=\"portal\" class=\"portal\"></portal>\n\t\t`;\n        if (shadow.adoptedStyleSheets !== undefined) {\n            const cssStyleSheet = new CSSStyleSheet();\n            cssStyleSheet.replaceSync(cssString);\n            shadow.adoptedStyleSheets = [cssStyleSheet];\n        }\n        else {\n            /* adoptedStyleSheets 未対応環境 */\n            shadow.innerHTML += `<style>${cssString}</style>`;\n        }\n        __classPrivateFieldSet(this, _portalElement, this.shadowRoot?.getElementById('portal'));\n        __classPrivateFieldSet(this, _portalClickEventListener, this._portalClickEvent.bind(this));\n        __classPrivateFieldSet(this, _portalTrainsitionEndEventListener, this._portalTrainsitionEndEvent.bind(this));\n    }\n    static get observedAttributes() {\n        return ['src', 'referrerpolicy'];\n    }\n    connectedCallback() {\n        const portalElement = __classPrivateFieldGet(this, _portalElement);\n        const src = this.src;\n        if (src !== null) {\n            portalElement.src = src;\n        }\n        const referrerPolicy = this.referrerpolicy;\n        if (referrerPolicy !== null) {\n            portalElement.referrerPolicy = referrerPolicy;\n        }\n        portalElement.addEventListener('click', __classPrivateFieldGet(this, _portalClickEventListener), { passive: true });\n        portalElement.addEventListener('transitionend', __classPrivateFieldGet(this, _portalTrainsitionEndEventListener), { passive: true });\n    }\n    disconnectedCallback() {\n        const portalElement = __classPrivateFieldGet(this, _portalElement);\n        portalElement.removeEventListener('click', __classPrivateFieldGet(this, _portalClickEventListener));\n        portalElement.removeEventListener('transitionend', __classPrivateFieldGet(this, _portalTrainsitionEndEventListener));\n    }\n    attributeChangedCallback(name, _oldValue, newValue) {\n        switch (name) {\n            case 'src': {\n                if (newValue !== null) {\n                    __classPrivateFieldGet(this, _portalElement).src = newValue;\n                }\n                else {\n                    __classPrivateFieldGet(this, _portalElement).removeAttribute('src');\n                }\n                break;\n            }\n            case 'referrerpolicy': {\n                if (newValue !== null) {\n                    __classPrivateFieldGet(this, _portalElement).referrerPolicy = newValue;\n                }\n                else {\n                    __classPrivateFieldGet(this, _portalElement).removeAttribute('referrerpolicy');\n                }\n                break;\n            }\n        }\n    }\n    get src() {\n        return this.getAttribute('src');\n    }\n    set src(value) {\n        if (value !== null) {\n            this.setAttribute('src', value);\n        }\n    }\n    get referrerpolicy() {\n        return this.getAttribute('referrerpolicy');\n    }\n    set referrerpolicy(value) {\n        if (value !== null) {\n            this.setAttribute('referrerpolicy', value);\n        }\n    }\n    /**\n     * <portal> 要素をクリックした時の処理\n     */\n    _portalClickEvent() {\n        this._fullScreen();\n    }\n    /**\n     * <portal> の包括要素のアニメーションが終わった時の処理\n     *\n     * @param {TransitionEvent} ev - Event\n     */\n    _portalTrainsitionEndEvent(ev) {\n        switch (ev.propertyName) { // ウィンドウサイズの変更でもアニメーションが起こってしまうので、とくに height を無視したい\n            case 'transform': {\n                this._activate();\n                break;\n            }\n        }\n    }\n    /**\n     * <portal> の包括要素をフルスクリーン表示にする\n     */\n    _fullScreen() {\n        const portalElement = __classPrivateFieldGet(this, _portalElement);\n        /* 表示位置を変えずに potision: fixed にするための前準備 */\n        const rect = portalElement.getBoundingClientRect();\n        if (__classPrivateFieldGet(this, _supportCSSTypedOM)) {\n            portalElement.attributeStyleMap.set('top', CSS.px(rect.top));\n            portalElement.attributeStyleMap.set('left', CSS.px(rect.left));\n            portalElement.attributeStyleMap.set('width', CSS.px(rect.width));\n        }\n        else {\n            portalElement.style.top = `${rect.top}px`;\n            portalElement.style.left = `${rect.left}px`;\n            portalElement.style.width = `${rect.width}px`;\n        }\n        /* potision: fixed を使ったフルスクリーン表示にする */\n        setTimeout(() => {\n            portalElement.classList.add('-fullscreen');\n        });\n    }\n    /**\n     * <portal> 要素をアクティベートする\n     */\n    _activate() {\n        __classPrivateFieldGet(this, _portalElement).activate();\n    }\n}\n_portalElement = new WeakMap(), _supportCSSTypedOM = new WeakMap(), _portalClickEventListener = new WeakMap(), _portalTrainsitionEndEventListener = new WeakMap();\n"]}